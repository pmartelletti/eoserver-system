<?php

function _custom_producto_get_linea() {
    $tid = false;
    $node = menu_get_object();
    if ($node && $node->type == 'productos') {
        $tid = $node->field_linea[LANGUAGE_NONE][0]['tid'];
    }
    return $tid;
}

function _custom_producto_block_show() {
    return true;
}

function _custom_producto_block_filter_show($type) {
    $is_visible = false;
    if ((arg(0) == 'productos' && arg(1) != '' && arg(2) == NULL)) {
        $type = 'linea';
    }
    switch ($type) {
        case 'linea':
        case 'lineas':
        case 'ambiente':
        case 'ambientes':
        case 'color':
        case 'colores':
        case 'tono':
        case 'tonos':
        case 'uso':
        case 'usos':
        case 'medida':
        case 'medidas':
            $term_name = arg(1);
            $term = taxonomy_get_term_by_name($term_name, 'categor_a');
            $term = array_shift($term);
            if ($term && $term->vid == 8) {
                $is_visible = true;
            }
            break;
    }
    return $is_visible;
}

function custom_producto_block_info() {
    $blocks['detail_product'] = array(
        'info' => t('Detalles de Producto'),
        'cache' => DRUPAL_CACHE_PER_PAGE,
        'visibility' => BLOCK_VISIBILITY_PHP,
        'pages' => '<?php return _custom_producto_block_show();?>',
    );
    $blocks['filter_linea'] = array(
        'info' => t('Filtro de producto por lineas'),
        'cache' => DRUPAL_CACHE_PER_PAGE,
        'visibility' => BLOCK_VISIBILITY_PHP,
        'pages' => '<?php return _custom_producto_block_filter_show("linea");?>',
    );
    $blocks['filter_all'] = array(
        'info' => t('Filtro de Categorias/Ambientes/Prop de Productos'),
        'cache' => DRUPAL_CACHE_PER_PAGE,
        'visibility' => BLOCK_VISIBILITY_LISTED,
        'pages' => 'productos/*
producto/*',
    );
    $blocks['filter_distribuidores'] = array(
        'info' => t('Filtro distribuidores'),
        'cache' => DRUPAL_CACHE_PER_PAGE,
        'visibility' => BLOCK_VISIBILITY_LISTED,
        'pages' => 'distribuidores',
    );
    return $blocks;
}

function custom_producto_block_view($delta = '') {
    $block = array();
    require_once drupal_get_path('module', 'custom_producto') . '/custom_producto.inc';
    require_once drupal_get_path('module', 'pathauto') . '/pathauto.inc';
    switch ($delta) {
        case 'detail_product':
            $node = node_load(arg(1));
            $block['subject'] = '';
            $block['content'] = array(
                '#theme' => 'custom_producto_detail',
                '#node' => $node,
            );
            break;
        case 'filter_linea':
            $arg = pathauto_cleanstring(arg(1));
            $type = 'lineas';
            $explode = false;
            switch (arg(2)) {
                case 'linea':
                case 'lineas':
                case 'color':
                case 'colores':
                case 'tono':
                case 'tonos':
                    $type = arg(2);
                    break;
                case 'ambiente':
                case 'ambientes':
                case 'uso':
                case 'usos':
                case 'medida':
                case 'medidas':
                    $explode = true;
                    $type = arg(2);
                    break;
            }
            $items = _custom_producto_get_items_filtro_linea($arg, $type);

            $list = array();
            if ($type == 'tonos') {
                foreach ($items as $item) {
                    $name = theme('image_style', array('style_name' => '125x125', 'path' => $item->field_icono[LANGUAGE_NONE][0]['uri']));
                    $url = str_replace(array(' '), array('-'), $item->name);
                    $list[] = l($name, "productos/$arg/$type/$url", array('html' => true));
                }
            } else {
                foreach ($items as $item) {
                    $name = $item->name;
                    if ($explode) {
                        $name = explode(':', $item->name);
                        $name = isset($name[1]) ? $name[1] : $item->name;
                    }

                    $url = str_replace(array(' '), array('-'), $item->name);
                    $list[] = l($name, "productos/$arg/$type/$url");
                }
            }

            $block['content'] = array(
                '#theme' => 'custom_filter_linea',
                '#list' => theme('item_list', array('items' => $list, 'type' => 'ul',)),
                '#category' => $arg,
            );
            break;
        case 'filter_all':
            drupal_add_js(drupal_get_path('module', 'custom_producto') . '/js/custom_producto_menu.js');
            $term = _custom_producto_get_term_from_arg();
            if ($term) {
                $items = _custom_producto_get_items_filtro_all($term->name);
                $block['subject'] = $term->name;
                $block['content'] = array(
                    '#theme' => 'custom_filter_all',
                    '#list' => theme('item_list', array('items' => $items, 'type' => 'ul',)),
                );
            }
            break;
        case 'filter_distribuidores':
            $block['subject'] = '';
            $block['content'] = drupal_get_form('custom_producto_filter_distribuidores_form');
            break;
    }
    return $block;
}

function custom_producto_theme() {
    return array(
        'custom_producto_detail' => array(
            'template' => 'templates/custom_producto_detail',
            'variables' => array('node' => NULL,),
        ),
        'custom_filter_linea' => array(
            'template' => 'templates/custom_filter_linea',
            'variables' => array('list' => '', 'category' => '',),
        ),
        'custom_filter_all' => array(
            'template' => 'templates/custom_filter_all',
            'variables' => array('list' => '',),
        ),
    );
}

function custom_producto_filter_distribuidores_form($form, &$form_state) {
    $_countries = country_get_list();
    $_countries = array_merge(array('' => 'Seleccionar'), $_countries);
    $countries = array();
    if (!empty($_countries)) {
        while (list($code, $name) = each($_countries)) {
            $countries[strtolower($code)] = $name;
        }
    }

    $form['country'] = array(
        '#type' => 'select',
        '#title' => 'País',
        '#options' => $countries,
        '#ajax' => array(
            'callback' => 'ajax_example_dependent_dropdown_callback',
            'wrapper' => 'dropdown-second-replace',
        ),
    );
    $province = array();
    $country_selected = isset($form_state['values']['country']) ? $form_state['values']['country'] : (isset($_GET['country']) ? $_GET['country'] : 'ar');
    $_province = location_get_provinces($country_selected);
    $_province = array_merge(array('' => 'Seleccionar'), $_province);
    if (!empty($_province)) {
        while (list($code, $name) = each($_province)) {
            $name = trim(str_replace('Distrito Federal', 'CABA', $name));
            $name = trim(str_replace('Province', '', $name));
            $province[$name] = $name;
        }
    }
    $form['country']['#default_value'] = $country_selected;

    $form['province'] = array(
        '#type' => 'select',
        '#title' => 'Provincia',
        '#prefix' => '<div id="dropdown-second-replace">',
        '#suffix' => '</div>',
        '#options' => $province,
    );
    if (isset($_GET['province'])) {
        $form['province']['#default_value'] = $_GET['province'];
    } else {
        $form['province']['#default_value'] = 'Buenos Aires Province';
    }
    $form['city'] = array(
        '#type' => 'textfield',
        '#title' => 'Ciudad',
        '#default_value' => isset($_GET['city']) ? $_GET['city'] : '',
    );
    $category = taxonomy_get_tree(8);
    $categorias = array('All' => 'Todas');
    foreach ($category as $c) {
        $categorias[$c->tid] = $c->name;
    }

    $form['field_categor_a_tid'] = array(
        '#type' => 'select',
        '#title' => 'Categoría',
        '#options' => $categorias,
        '#default_value' => isset($_GET['field_categor_a_tid']) ? $_GET['field_categor_a_tid'] : 'All',
    );
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Aplicar',
    );
    return $form;
}

function custom_producto_filter_distribuidores_form_submit($form, &$form_state) {
    $form_state['redirect'] = array(
        'distribuidores',
        array(
            'query' => array(
                'country' => $form_state['values']['country'],
                'province' => $form_state['values']['province'],
                'city' => $form_state['values']['city'],
                'field_categor_a_tid' => $form_state['values']['field_categor_a_tid'],
            ),
        )
    );
}

function ajax_example_dependent_dropdown_callback($form, $form_state) {
    return $form['province'];
}

function custom_producto_views_query_alter(&$view, &$query) {
    if ($view->name == 'distribuidores') {
        //&& is_numeric($view->exposed_raw_input['title']) && $view->exposed_raw_input['title'] > 0
        // Traverse through the 'where' part of the query.
        foreach ($query->where as &$condition_group) {
            foreach ($condition_group['conditions'] as &$condition) {
                if ($condition['field'] == 'location.province') {
                    //$view->exposed_raw_input['title']
                    $condition['value']= isset($_GET['provincia']) ? $_GET['provincia'] : 'Buenos Aires';
                }
                if ($condition['field'] == 'location.country') {
                    //$view->exposed_raw_input['title']
                    $condition['value']= isset($_GET['country']) ? $_GET['country'] : 'ar';
                }
            }
        }
    }
}
